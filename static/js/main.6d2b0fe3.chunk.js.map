{"version":3,"sources":["components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","sharedStyles","css","StyledFormWrapper","styled","div","StyledForm","form","StyledInput","input","StyledButton","button","StyledFieldset","fieldset","initialFormState","name","password","passwordConfirm","birth","age","accept","Form","React","useState","formState","setFormState","agreeTerms","setAgreeTerms","handleInput","e","inputName","currentTarget","value","prev","onSubmit","console","log","passwordCheck","preventDefault","alert","window","location","reload","htmlFor","type","placeholder","onChange","required","maxLength","minLength","data-tip","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAIMA,EAAcC,YAAH,gPAaXC,EAAeC,YAAH,iMAUZC,EAAoBC,IAAOC,IAAV,wIAQjBC,EAAaF,IAAOG,KAAV,qNAUVC,EAAcJ,IAAOK,MAAV,qEAGbR,GAGES,EAAeN,IAAOO,OAAV,4OAaZC,EAAiBR,IAAOS,SAAV,6OAgBdC,EAAmB,CACrBC,KAAM,GACNC,SAAU,GACVC,gBAAiB,GACjBC,MAAO,GACPC,IAAK,GACLC,QAAQ,GAGG,SAASC,IAAQ,IAAD,EACOC,IAAMC,SAAST,GADtB,mBACpBU,EADoB,KACTC,EADS,OAESH,IAAMC,SAAST,EAAiBM,QAFzC,mBAEpBM,EAFoB,KAERC,EAFQ,KAgBrBC,EAAc,SAAAC,GAChB,IAAMC,EAAYD,EAAEE,cAAchB,KAC5BiB,EAAQH,EAAEE,cAAcC,MAC9BP,GAAa,SAAAQ,GAAI,kCAAUA,GAAV,kBAAiBH,EAAYE,QAGlD,OACI,qCACI,cAACjC,EAAD,IACA,cAACI,EAAD,UACI,eAACG,EAAD,CAAY4B,SAtBH,SAAAL,GAEjBM,QAAQC,IAAIZ,GACZ,IAAMa,EAAgBb,EAAUR,WAAaQ,EAAUP,gBACvDY,EAAES,iBACEZ,GAAcW,GACdE,MAAM,kBACNC,OAAOC,SAASC,QAAO,IAEtBH,MAAM,8CAaH,UACI,6CACA,uBAAOI,QAAQ,SACf,cAACnC,EAAD,CAAaoC,KAAK,OAAO7B,KAAK,OAAO8B,YAAY,kBAAkBb,MAAOR,EAAUT,KAAM+B,SAAUlB,EAAamB,UAAQ,EAACC,UAAU,OACpI,uBAAOL,QAAQ,aACf,cAACnC,EAAD,CAAaoC,KAAK,WAAW7B,KAAK,WAAW8B,YAAY,mBAAmBb,MAAOR,EAAUR,SAAU8B,SAAUlB,EAAamB,UAAQ,EAACE,UAAU,IAAID,UAAU,OAC/J,uBAAOL,QAAQ,oBACf,cAACnC,EAAD,CAAaoC,KAAK,WAAW7B,KAAK,kBAAkB8B,YAAY,wBAAwBb,MAAOR,EAAUP,gBAAiB6B,SAAUlB,EAAamB,UAAQ,IACzJ,uBAAOJ,QAAQ,UACf,cAACnC,EAAD,CAAaoC,KAAK,OAAO7B,KAAK,QAAQiB,MAAOR,EAAUN,MAAO4B,SAAUlB,EAAamB,UAAQ,IAC7F,uBAAOJ,QAAQ,QACf,cAACnC,EAAD,CAAaoC,KAAK,OAAO7B,KAAK,MAAM8B,YAAY,iBAAiBb,MAAOR,EAAUL,IAAK2B,SAAUlB,EAAamB,UAAQ,EAACC,UAAU,MACjI,eAACpC,EAAD,WACI,2CACA,kCACI,uBAAOgC,KAAK,QAAQZ,OAAO,EAAMc,SAAU,kBAAMnB,GAAc,IAAOZ,KAAK,UAD/E,YAIA,kCACI,uBAAOmC,WAAS,uCAAuCN,KAAK,QAAQZ,OAAO,EAAOc,SAAU,kBAAMnB,GAAc,IAAQZ,KAAK,UADjI,mBAIA,cAAC,IAAD,OAEJ,cAACL,EAAD,CAAckC,KAAK,SAAnB,4BCjILO,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC/B,EAAD,OCOSgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6d2b0fe3.chunk.js","sourcesContent":["import React from 'react'\nimport styled, { createGlobalStyle, css } from 'styled-components'\nimport ReactTooltip from 'react-tooltip';\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%\n  }\n  body {\n    font-family: Arial, Helvetica, sans-serif;\n    background: linear-gradient(to bottom, #DA4453, #89216B);\n    height: 100%;\n    margin: 0;\n    color: #555;\n  }\n`;\n\nconst sharedStyles = css`\n  background-color: #eee;\n  height: 40px;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin: 10px 0 20px 0;\n  padding: 20px;\n  box-sizing: border-box;\n`;\n\nconst StyledFormWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  padding: 0 20px;\n`;\n\nconst StyledForm = styled.form`\n  width: 100%;\n  max-width: 700px;\n  padding: 40px;\n  background-color: #fff;\n  border-radius: 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.2);\n`;\n\nconst StyledInput = styled.input`\n  display: block;\n  width: 100%;\n  ${sharedStyles}\n`;\n\nconst StyledButton = styled.button`\n  display: block;\n  background-color: #f7797d;\n  color: #fff;\n  font-size: 0.9rem;\n  border: 0;\n  border-radius: 5px;\n  height: 40px;\n  padding: 0 20px;\n  cursor: pointer;\n  box-sizing: border-box;\n`;\n\nconst StyledFieldset = styled.fieldset`\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  padding: 10px;\n  margin: 20px 0;\n  legend {\n    padding: 0 10px;\n  }\n  label {\n    padding-right: 20px;\n  }\n  input {\n    margin-right: 10px;\n  }\n`;\n\nconst initialFormState = {\n    name: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    birth: \"\",\n    age: \"\",\n    accept: false\n}\n\nexport default function Form() {\n    const [formState, setFormState] = React.useState(initialFormState)\n    const [agreeTerms, setAgreeTerms] = React.useState(initialFormState.accept)\n\n    const handleSumbit = e => {\n        // console the form state\n        console.log(formState)\n        const passwordCheck = formState.password === formState.passwordConfirm\n        e.preventDefault()\n        if (agreeTerms && passwordCheck) {\n            alert('Form Submitted')\n            window.location.reload(false);\n        }\n        else alert('An error has occurred submitting the form')\n    }\n\n    const handleInput = e => {\n        const inputName = e.currentTarget.name;\n        const value = e.currentTarget.value;\n        setFormState(prev => ({ ...prev, [inputName]: value }));\n    };\n\n    return (\n        <>\n            <GlobalStyle />\n            <StyledFormWrapper>\n                <StyledForm onSubmit={handleSumbit}>\n                    <h2>Create User</h2>\n                    <label htmlFor=\"name\" />\n                    <StyledInput type='text' name=\"name\" placeholder=\"Enter your name\" value={formState.name} onChange={handleInput} required maxLength=\"50\" />\n                    <label htmlFor=\"password\" />\n                    <StyledInput type='password' name=\"password\" placeholder=\"Enter a password\" value={formState.password} onChange={handleInput} required minLength=\"8\" maxLength=\"20\" />\n                    <label htmlFor=\"passwordConfirm\" />\n                    <StyledInput type='password' name=\"passwordConfirm\" placeholder=\"Confirm your password\" value={formState.passwordConfirm} onChange={handleInput} required />\n                    <label htmlFor=\"birth\" />\n                    <StyledInput type='date' name=\"birth\" value={formState.birth} onChange={handleInput} required />\n                    <label htmlFor=\"age\" />\n                    <StyledInput type='text' name=\"age\" placeholder=\"Enter your age\" value={formState.age} onChange={handleInput} required maxLength='3' />\n                    <StyledFieldset>\n                        <legend >Terms</legend>\n                        <label>\n                            <input type=\"radio\" value={true} onChange={() => setAgreeTerms(true)} name=\"Terms\" />\n                            Accept\n                        </label>\n                        <label>\n                            <input data-tip=\"You must accept terms to submit form\" type=\"radio\" value={false} onChange={() => setAgreeTerms(false)} name=\"Terms\" />\n                            Do Not Accept\n                        </label>\n                        <ReactTooltip />\n                    </StyledFieldset>\n                    <StyledButton type=\"submit\">Submit</StyledButton>\n                </StyledForm>\n            </StyledFormWrapper>\n        </>\n    )\n}","import Form from './components/Form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}